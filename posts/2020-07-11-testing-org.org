---
title: Are Haskell Functors actual Functors?
author: Ramiro Leal
date: 2020-07-13
bibliography: bibliography:bib/references.bib
---

** How are functors defined in haskell?

Are Haskell functors actual functors? Let’s take as an example the list instance of functor:[fn:1]

[fn:1] This is the actual implemenetation used in the [[https://hackage.haskell.org/package/base-4.14.0.0/docs/Prelude.html][Haskell Prelude]].


#+begin_src haskell
instance Functor [] where
  -- fmap ∷ (α → β) → [α] → [β]
  fmap _ []     = []
  fmap f (x:xs) = fx : fmap f xs
#+end_src

In order to better understand if ~[]~ is a functor, we first need to note that a functor \(F : \mathbf{C} \to \mathbf{D}\) can take different things as inputs: Objects and Arrows. Thus, \(F\) can be thought of as a two functions in one:


#+begin_src haskell :results output silent
f ∷ Int → Int
f x = x
#+end_src

This is a citation cite:10.1145/871895.871896

This is a citation cite:10.1145/871895.871896

#+begin_src haskell :results code
ghci> take 4 [1..]
#+end_src

#+begin_src haskell
[1,2,3,4]
#+end_src

----------------
